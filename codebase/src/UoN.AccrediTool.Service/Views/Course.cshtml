@model UoCourseModel
@{
    ViewData["ViewName"] = "Course";
    ViewData["Title"] = Model.GetCourseCode() + " - " + Model.Name;
}

<section class="py-4">
    <div class="bg-white overflow-hidden shadow sm:rounded-lg">
        <div class="px-4 py-5 border-b border-gray-200 sm:px-6">
            <h2 class="text-lg leading-6 font-medium text-gray-900">
                @Model.GetCourseCode()
            </h2>
            <p class="mt-1 max-w-2xl text-sm leading-5 text-gray-500">
                @Model.Name
            </p>
        </div>
        <div class="px-4 py-5 sm:px-6">
            <div class="grid grid-cols-1 col-gap-4 row-gap-8 sm:grid-cols-2 -mb-3">
                <dl class="sm:col-span-1 pb-3">
                    <dt class="text-sm leading-5 font-medium text-gray-500">
                        Field of Education
                    </dt>
                    <dd class="mt-1 text-sm leading-5 text-gray-900">
                        @Model.FieldOfEducation.Name
                    </dd>
                </dl>
                <dl class="sm:col-span-1 pb-3">
                    <dt class="text-sm leading-5 font-medium text-gray-500">
                        Units
                    </dt>
                    <dd class="mt-1 text-sm leading-5 text-gray-900">
                        @Model.Units
                    </dd>
                </dl>
                <dl class="sm:col-span-1 pb-3">
                    <dt class="text-sm leading-5 font-medium text-gray-500">
                        Managing school
                    </dt>
                    <dd class="mt-1 text-sm leading-5 text-gray-900">
                        @Model.AcademicOrg.Name
                    </dd>
                </dl>
                <dl class="sm:col-span-1 pb-3">
                    <dt class="text-sm leading-5 font-medium text-gray-500">
                        Level
                    </dt>
                    <dd class="mt-1 text-sm leading-5 text-gray-900">
                        @Model.GetLevel() (@Model.GetLevelName())
                    </dd>
                </dl>
                @if (Model.Description != null)
                {
                    <dl class="sm:col-span-2 pb-3">
                        <dt class="text-sm leading-5 font-medium text-gray-500">
                            Description
                        </dt>
                        <dd class="mt-1 text-sm leading-5 text-gray-900">
                            @Model.Description
                        </dd>
                    </dl>
                }
                @if (Model.CourseInstances.Count > 0)
                {
                    <dl class="sm:col-span-2 pb-3">
                        <dt class="text-sm leading-5 font-medium text-gray-500">
                            
                        </dt>
                        <dd class="mt-1 text-sm leading-5 text-gray-900">
                            <ul class="border border-gray-200 rounded-md">
                                @for (int ix1 = 0; ix1 < Model.CourseInstances.Count; ix1++)
                                {
                                    var courseInstance = Model.CourseInstances[ix1];
                                    <li class="pl-3 pr-4 py-3 flex items-center justify-between text-sm leading-5@(ix1 != Model.CourseInstances.Count - 1 ? " border-b border-gray-200" : "")">
                                        <div class="whitespace-no-wrap ml-2 w-0 flex-1">
                                            @if ((bool)ViewData["IsStatic"])
                                            {
                                                <a class="truncate font-medium underline text-indigo-600 hover:text-indigo-900" href="course-instance-@(courseInstance.CourseInstanceId).aspx">
                                                    More<div class="hidden sm:inline"> course infomation</div>
                                                </a>
                                            }
                                            else
                                            {
                                                <a class="truncate font-medium underline text-indigo-600 hover:text-indigo-900"
                                                   asp-controller="UoCourseInstance" asp-action="GetView" asp-route-id="@courseInstance.CourseInstanceId" asp-route-projectId="@ViewData["ProjectId"]" asp-route-template="@ViewData["Template"]">
                                                    More<div class="hidden sm:inline"> course infomation</div>
                                                </a>
                                            }
                                        </div>
                                        
         
                                        
                                    </li>
                                }
                            </ul>
                        </dd>
                    </dl>
                }
            </div>
        </div>
    </div>
</section>
@if (Model.Documents.Count > 0)
{
    ViewData["DocumentTypes"] = new List<UoDocumentType>()
    {
        UoDocumentType.Documentation
    };
    <section class="py-4">
        <div class="bg-white overflow-hidden shadow rounded-lg">
            <div class="border-b border-gray-200 px-4 py-5 sm:px-6">
                <h2 class="text-lg font-semibold text-gray-900">Documents</h2>
            </div>
            <div class="px-4 py-5 sm:p-6">
                <partial name="_Documents" model="Model.Documents" view-data="ViewData" />
            </div>
        </div>
    </section>
}
@if (Model.NodeCourses.Count > 0 || Model.LevelCourses.Count > 0)
{
    <section class="py-4">
        <div class="bg-white overflow-hidden shadow rounded-lg">
            <div class="border-b border-gray-200 px-4 py-5 sm:px-6">
                <h2 class="text-lg font-semibold text-gray-900">Mapping</h2>
            </div>
            <div class="px-4 py-5 sm:p-6">
                @{ViewData["IncludeNodeLink"] = true;}
                @if (Model.NodeCourses.Count > 0)
                {
                    try
                    {
                        <partial name="Templates/@ViewData["Template"]/_CourseNodes" model="Model.Nodes" view-data="ViewData" />
                    }
                    catch (InvalidOperationException)
                    {
                        <partial name="Templates/Universal/_CourseNodes" model="Model.Nodes" view-data="ViewData" />
                    }
                }
                @if (Model.LevelCourses.Count > 0)
                {
                    <div class="@(Model.NodeCourses.Count > 0 ? "mt-4" : "")">
                        @try
                        {
                            <partial name="Templates/@ViewData["Template"]/_CourseNodeLevels" model="Model.NodeLevels" view-data="ViewData" />
                        }
                        catch (InvalidOperationException)
                        {
                            <partial name="Templates/Universal/_CourseNodeLevels" model="Model.NodeLevels" view-data="ViewData" />
                        }
                    </div>
                }
            </div>
        </div>
    </section>
}
