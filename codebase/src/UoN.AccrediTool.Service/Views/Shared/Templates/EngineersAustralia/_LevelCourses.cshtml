@model List<UoLevelCoursesJoin>

<style>
    .ea-level-1 {
        background-color: #ffa600;
        background-color: rgba(255, 166, 0, 1);
    }

    .ea-level-1-2 {
        background-color: #ff764a;
        background-color: rgba(255, 118, 74, 1);
    }

    .ea-level-2 {
        color: #fff;
        background-color: #ef5675;
        background-color: rgba(239, 86, 117, 1);
    }

    .ea-level-2-3 {
        color: #fff;
        background-color: #bc5090;
        background-color: rgba(188, 80, 144, 1);
    }

    .ea-level-3 {
        color: #fff;
        background-color: #7a5195;
        background-color: rgba(122, 81, 149, 1);
    }

    .ea-level-3-4 {
        color: #fff;
        background-color: #374c80;
        background-color: rgba(55, 76, 128, 1);
    }

    .ea-level-4 {
        color: #fff;
        background-color: #003f5c;
        background-color: rgba(0, 63,92, 1);
    }
</style>
@{
    var courses = Model.GroupBy(join => join.CourseId).Select(join => join.First()).Select(join => join.Course).OrderBy(course => course.Position);
    <!-- Desktop version -->
    <div class="hidden sm:flex flex-col">
        <div class="-my-2 py-4 overflow-x-auto sm:-mx-6 sm:px-6 lg:-mx-8 lg:px-8">
            <div class="align-middle inline-block min-w-full shadow overflow-hidden rounded-lg border-b border-gray-200">
                <table class="min-w-full">
                    <thead>
                        <tr>
                            <th class="w-4/12 md:w-2/12 pl-2 lg:pl-6 py-3 whitespace-no-wrap border-b border-gray-200 bg-gray-50 text-xs text-left leading-4 font-medium text-gray-500 uppercase tracking-wider">
                                Course Code
                            </th>
                            <th class="hidden md:table-cell w-6/12 px-3 lg:px-6 whitespace-no-wrap border-b border-gray-200 bg-gray-50 text-xs text-left leading-4 font-medium text-gray-500 uppercase tracking-wider">
                                Name
                            </th>
                            <th class="w-2/12 md:w-1/12 whitespace-no-wrap border-b border-gray-200 bg-gray-50 text-xs leading-4 font-medium text-gray-500 uppercase tracking-wider">
                                Taught
                            </th>
                            <th class="w-2/12 md:w-1/12 whitespace-no-wrap border-b border-gray-200 bg-gray-50 text-xs leading-4 font-medium text-gray-500 uppercase tracking-wider">
                                Practised
                            </th>
                            <th class="w-2/12 md:w-1/12 whitespace-no-wrap border-b border-gray-200 bg-gray-50 text-xs leading-4 font-medium text-gray-500 uppercase tracking-wider">
                                Assessed
                            </th>
                            <th class="w-2/12 md:w-1/12 whitespace-no-wrap border-b border-gray-200 bg-gray-50 text-xs leading-4 font-medium text-gray-500 uppercase tracking-wider">
                                Level
                            </th>
                        </tr>
                    </thead>
                    <tbody>
                        @for (int ix1 = 0; ix1 < courses.Count(); ix1++)
                        {
                            var course = courses.ElementAt(ix1);
                            var bloomsLevels = Model.Where(join => join.CourseId == course.CourseId && join.Level.LevelCategory.Name == "Implied Pedagogy").Select(join => join.Level);
                            var capability = string.Join("-", Model.Where(join => join.CourseId == course.CourseId && join.Level.LevelCategory.Name == "Level of Capability").Select(join => join.Level.Position));
                            <tr class="h-13 bg-white@(ix1 != courses.Count() - 1 ? " border-b border-gray-200" : "")">
                                <td class="pl-2 lg:pl-6 whitespace-no-wrap border-l border-gray-200">
                                    <div class="flex items-center">
                                        @if ((bool)ViewData["IsStatic"])
                                        {
                                            <a class="underline text-sm leading-5 font-medium text-indigo-600 hover:text-indigo-900" href="course-@(course.CourseId).aspx">
                                                @course.GetCourseCode()
                                            </a>
                                        }
                                        else
                                        {
                                            <a class="underline text-sm leading-5 font-medium text-indigo-600 hover:text-indigo-900"
                                               asp-controller="UoCourse" asp-action="GetView" asp-route-id="@course.CourseId" asp-route-projectId="@ViewData["ProjectId"]" asp-route-template="@ViewData["Template"]">
                                                @course.GetCourseCode()
                                            </a>
                                        }
                                    </div>
                                </td>
                                <td class="hidden md:table-cell px-3 lg:px-6 whitespace-no-wrap text-gray-900 text-left text-sm leading-5 border-l border-gray-200">
                                    @course.Name
                                </td>
                                @if (bloomsLevels.Any())
                                {
                                    foreach (int position in new List<int>() { 1, 2, 3 })
                                    {
                                        var blooms = bloomsLevels.Where(level => level.Position == position);
                                        bool isMapped = blooms.Any();
                                        <td class="whitespace-no-wrap text-center border-l border-gray-200">
                                            <div title="@(isMapped ? blooms.First().Name : "")" class="h-12 w-12 mx-auto @(isMapped ? "text-gray-500" : "text-gray-200")">
                                                @if (isMapped)
                                                {
                                                    <partial name="SVG/CircleCheckmark" />
                                                }
                                                else
                                                {
                                                    <partial name="SVG/CircleCross" />
                                                }
                                            </div>
                                        </td>
                                    }
                                }
                                else
                                {
                                    <td class="whitespace-no-wrap text-center border-l border-gray-200">
                                        <div title="Taught" class="h-12 w-12 mx-auto text-gray-200">
                                            <partial name="SVG/CircleQuestionmark" />
                                        </div>
                                    </td>
                                    <td class="whitespace-no-wrap text-center border-l border-gray-200">
                                        <div title="Practiced" class="h-12 w-12 mx-auto text-gray-200">
                                            <partial name="SVG/CircleQuestionmark" />
                                        </div>
                                    </td>
                                    <td class="whitespace-no-wrap text-center border-l border-gray-200">
                                        <div title="Assessed" class="h-12 w-12 mx-auto text-gray-200">
                                            <partial name="SVG/CircleQuestionmark" />
                                        </div>
                                    </td>
                                }
                                @if (capability != "")
                                {
                                    <td class="whitespace-no-wrap text-center text-base leading-5 border-l border-gray-200 ea-level-@capability">
                                        @capability
                                    </td>
                                }
                                else
                                {
                                    <td class="text-center text-gray-500 border-l border-gray-200">?</td>
                                }
                            </tr>
                        }
                    </tbody>
                </table>
            </div>
        </div>
    </div>
    <!-- Mobile version -->
    <div class="flex flex-col px-2 sm:hidden">
        @foreach (var course in courses)
        {
            var bloomsLevels = Model.Where(join => join.CourseId == course.CourseId && join.Level.LevelCategory.Name == "Implied Pedagogy").Select(join => join.Level);
            var capability = string.Join("-", Model.Where(join => join.CourseId == course.CourseId && join.Level.LevelCategory.Name == "Level of Capability").Select(join => join.Level.Position));
            <div class="mb-4 bg-white overflow-hidden shadow">
                <div class="px-2 py-5 border-b border-gray-200">
                    <h3 class="text-lg leading-6 font-medium text-gray-900">
                        <span class="flex items-center">
                            @course.GetCourseCode()
                        </span>
                    </h3>
                    <p class="my-1 max-w-2xl text-sm leading-5 text-gray-500">
                        @course.Name
                    </p>
                    @if ((bool)ViewData["IsStatic"])
                    {
                        <a title="@course.Name" class="underline font-medium text-indigo-600 hover:text-indigo-900" href="course-@(course.CourseId).aspx">
                            View course
                        </a>
                    }
                    else
                    {
                        <a title="@course.Name" class="underline font-medium text-indigo-600 hover:text-indigo-900"
                           asp-controller="UoCourse" asp-action="GetView" asp-route-id="@course.CourseId" asp-route-projectId="@ViewData["ProjectId"]" asp-route-template="@ViewData["Template"]">
                            View course
                        </a>
                    }
                </div>
                <div class="flex flex-col items-center py-5">
                    <div class="w-full shadow overflow-hidden">
                        <table class="w-full">
                            <thead>
                                <tr>
                                    <th class="py-3 w-1/4 border-b border-gray-200 bg-gray-50 text-xs leading-4 font-medium text-gray-500 uppercase tracking-wider">
                                        Taught
                                    </th>
                                    <th class="w-1/4 border-b border-gray-200 bg-gray-50 text-xs leading-4 font-medium text-gray-500 uppercase tracking-wider">
                                        Practised
                                    </th>
                                    <th class="w-1/4 border-b border-gray-200 bg-gray-50 text-xs leading-4 font-medium text-gray-500 uppercase tracking-wider">
                                        Assessed
                                    </th>
                                    <th class="w-1/4 border-b border-gray-200 bg-gray-50 text-xs leading-4 font-medium text-gray-500 uppercase tracking-wider">
                                        Level
                                    </th>
                                </tr>
                            </thead>
                            <tbody>
                                <tr class="bg-white">
                                    @if (bloomsLevels.Any())
                                    {
                                        foreach (int position in new List<int>() { 1, 2, 3 })
                                        {
                                            var blooms = bloomsLevels.Where(level => level.Position == position);
                                            bool isMapped = blooms.Any();
                                            <td class="whitespace-no-wrap text-center border-l border-gray-200">
                                                <div title="@(isMapped ? blooms.First().Name : "")" class="h-12 w-12 mx-auto @(isMapped ? "text-gray-500" : "text-gray-200")">
                                                    @if (isMapped)
                                                    {
                                                        <partial name="SVG/CircleCheckmark" />
                                                    }
                                                    else
                                                    {
                                                        <partial name="SVG/CircleCross" />
                                                    }
                                                </div>
                                            </td>
                                        }
                                    }
                                    else
                                    {
                                        <td class="whitespace-no-wrap text-center border-l border-gray-200">
                                            <div title="" class="h-12 w-12 mx-auto text-gray-200">
                                                <partial name="SVG/CircleQuestionmark" />
                                            </div>
                                        </td>
                                        <td class="whitespace-no-wrap text-center border-l border-gray-200">
                                            <div title="" class="h-12 w-12 mx-auto text-gray-200">
                                                <partial name="SVG/CircleQuestionmark" />
                                            </div>
                                        </td>
                                        <td class="whitespace-no-wrap text-center border-l border-gray-200">
                                            <div title="" class="h-12 w-12 mx-auto text-gray-200">
                                                <partial name="SVG/CircleQuestionmark" />
                                            </div>
                                        </td>
                                    }
                                    @if (capability != "")
                                    {
                                        <td class="whitespace-no-wrap text-center text-base leading-5 border-l border-gray-200 ea-level-@capability">
                                            @capability
                                        </td>
                                    }
                                    else
                                    {
                                        <td class="text-center text-gray-500 border-l border-gray-200">?</td>
                                    }
                                </tr>
                            </tbody>
                        </table>
                    </div>
                </div>
            </div>
        }
    </div>
}
