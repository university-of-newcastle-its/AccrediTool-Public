@model UoProgramModel

<style>
    #legend[open] > summary {
        /* text-indigo-900 */
        color: #362f78;
        color: rgba(54, 47, 120, 1);
    }

    #legend[open] > summary > span {
        display: none;
    }

    #legend[open] > summary::after {
        content: "Hide legend";
    }

    .ea-level-1 {
        background-color: #ffa600;
        background-color: rgba(255, 166, 0, 1);
    }

    .ea-level-1-2 {
        background-color: #ff764a;
        background-color: rgba(255, 118, 74, 1);
    }

    .ea-level-2 {
        color: #fff;
        background-color: #ef5675;
        background-color: rgba(239, 86, 117, 1);
    }

    .ea-level-2-3 {
        color: #fff;
        background-color: #bc5090;
        background-color: rgba(188, 80, 144, 1);
    }

    .ea-level-3 {
        color: #fff;
        background-color: #7a5195;
        background-color: rgba(122, 81, 149, 1);
    }

    .ea-level-3-4 {
        color: #fff;
        background-color: #374c80;
        background-color: rgba(55, 76, 128, 1);
    }

    .ea-level-4 {
        color: #fff;
        background-color: #003f5c;
        background-color: rgba(0, 63,92, 1);
    }
</style>
@{ 
    var nodes = new Dictionary<int, string>();
    UoProjectModel project = (UoProjectModel)ViewData["Project"];
    UoFrameworkModel framework = project.Framework;
    @*
    <div class="flex items-center">
        <svg viewBox="0 0 24 24" fill="none" stroke="currentColor" class="mr-2 h-6 w-6 text-gray-400">
            <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M7 7h.01M7 3h5c.512 0 1.024.195 1.414.586l7 7a2 2 0 010 2.828l-7 7a2 2 0 01-2.828 0l-7-7A1.994 1.994 0 013 12V7a4 4 0 014-4z"></path>
        </svg>
        <div class="text-sm text-gray-500">This course has viewable <span class="font-medium">student work samples</span></div>
    </div>
    *@
    <details id="legend" class="py-2">
        <summary class="ie:hidden edge:hidden inline select-none underline font-medium text-indigo-600 hover:text-indigo-900 cursor-pointer"><span>Show legend</span></summary>
        <h3 class="hidden ie:block edge:block text-base leading-5 font-medium text-gray-500">Legend</h3>
        <partial name="Templates/EngineersAustralia/_LevelCategories" />
    </details>
    <!-- Desktop version -->
    <div class="hidden sm:flex flex-col">
        <div class="-my-2 py-4 overflow-x-auto sm:-mx-6 sm:px-6 lg:-mx-8 lg:px-8">
            <div class="align-middle inline-block min-w-full shadow overflow-hidden rounded-lg border-b border-gray-200">
                <table id="desktop-table" class="min-w-full">
                    <thead>
                        <tr>
                            <th class="w-2/12 pl-2 lg:pl-6 whitespace-no-wrap border-b border-gray-200 bg-gray-50 text-xs text-left leading-4 font-medium text-gray-500 uppercase tracking-wider">
                                Course Code
                            </th>
                            @foreach (var parentNode in framework.Nodes)
                            {
                                @foreach (var childNode in parentNode.ChildNodes)
                                {
                                    string position = parentNode.Position + "." + childNode.Position;
                                    nodes.Add(childNode.NodeId, position);
                                    <th class="py-3 border-b border-gray-200 bg-gray-50 text-xs leading-4 font-medium text-gray-500 uppercase tracking-wider" style="width: 5.208333%;">
                                        @if ((bool)ViewData["IsStatic"])
                                        {
                                            <a class="underline text-indigo-600 hover:text-indigo-900" title="@childNode.Name" href="node-@(childNode.NodeId).aspx">
                                                @position
                                            </a>
                                        }
                                        else
                                        {
                                            <a class="underline text-indigo-600 hover:text-indigo-900" title="@childNode.Name"
                                                asp-controller="UoNode" asp-action="GetView" asp-route-id="@childNode.NodeId" asp-route-projectId="@ViewData["ProjectId"]" asp-route-template="@ViewData["Template"]">
                                                @position
                                            </a>
                                        }
                                    </th>
                                }
                            }
                        </tr>
                    </thead>
                    @foreach (var courseList in Model.ProgramStructure)
                    {
                        <tbody>
                            <tr class="bg-blue-100">
                                <td class="pl-2 lg:pl-6 py-3 whitespace-no-wrap text-sm leading-5 font-semibold">
                                    @courseList.Name
                                </td>
                                <td colspan="16"></td>
                            </tr>
                            @for (int ix1 = 0; ix1 < courseList.Courses.Count; ix1++)
                            {
                                var course = courseList.Courses[ix1];
                                <tr class="h-13 bg-white@(ix1 != courseList.Courses.Count - 1 ? " border-b border-gray-200" : "")">
                                    <td class="pl-2 lg:pl-6 whitespace-no-wrap text-sm leading-5 font-medium">
                                        <div class="flex items-center">
                                            @if ((bool)ViewData["IsStatic"])
                                            {
                                                <a class="underline text-indigo-600 hover:text-indigo-900" title="@course.Name" href="course-@(course.CourseId).aspx">
                                                    @course.GetCourseCode()
                                                </a>
                                            }
                                            else
                                            {
                                                <a class="underline text-indigo-600 hover:text-indigo-900" title="@course.Name"
                                                   asp-controller="UoCourse" asp-action="GetView" asp-route-id="@course.CourseId" asp-route-projectId="@ViewData["ProjectId"]" asp-route-template="@ViewData["Template"]">
                                                    @course.GetCourseCode()
                                                </a>
                                            }
                                        </div>
                                    </td>
                                    @foreach (int nodeId in nodes.Keys)
                                    {
                                        var levelCourses = course.LevelCourses.Where(join => join.NodeId == nodeId && join.Level.LevelCategory.Name == "Level of Capability").ToList();
                                        if (levelCourses.Count > 0)
                                        {
                                            string level = string.Join("-", levelCourses.Select(join => join.Level.Position));
                                            <td class="text-sm md:text-base text-center border-l border-gray-200 ea-level-@level">
                                                @level
                                            </td>
                                        }
                                        else
                                        {
                                            <td class="border-l border-gray-200"></td>
                                        }
                                    }
                                </tr>
                            }
                        </tbody>
                    }
                </table>
            </div>
        </div>
    </div>
    <!-- Mobile version -->
    <div class="flex flex-col sm:hidden">
        @for (int ix2 = 0; ix2 < Model.ProgramStructure.Count; ix2++)
        {
            var courseList = Model.ProgramStructure.ElementAt(ix2);
            <span class="@(ix2 != Model.ProgramStructure.Count - 1 ? "mb-4" : "")"></span>
            <h3 class="mb-2 text-xl font-semibold text-gray-900">@courseList.Name</h3>
            <div>
                @foreach (var course in courseList.Courses)
                {
                    <div class="mb-4 bg-white overflow-hidden shadow">
                        <div class="px-4 py-5 border-b border-gray-200 sm:px-6">
                            <h3 class="text-lg leading-6 font-medium text-gray-900">
                                <span class="flex items-center">
                                    @course.GetCourseCode()
                                </span>
                            </h3>
                            <p class="my-1 max-w-2xl text-sm leading-5 text-gray-500">
                                @course.Name
                            </p>
                            @if ((bool)ViewData["IsStatic"])
                            {
                                <a class="underline font-medium text-indigo-600 hover:text-indigo-900" title="@course.Name" href="course-@(course.CourseId).aspx">
                                    View course
                                </a>
                            }
                            else
                            {
                                <a class="underline font-medium text-indigo-600 hover:text-indigo-900" title="@course.Name"
                                   asp-controller="UoCourse" asp-action="GetView" asp-route-id="@course.CourseId" asp-route-projectId="@ViewData["ProjectId"]" asp-route-template="@ViewData["Template"]">
                                    View course
                                </a>
                            }
                        </div>
                        <div class="flex flex-col items-center px-4 py-5">
                            <div class="w-full shadow overflow-hidden">
                                <table class="w-full">
                                    <thead>
                                        <tr>
                                            <th class="p-3 border-b border-gray-200 bg-gray-50 text-xs leading-4 font-medium text-gray-500 uppercase tracking-wider">
                                                Competency
                                            </th>
                                            <th class="px-3 border-b border-gray-200 bg-gray-50 text-xs leading-4 font-medium text-gray-500 uppercase tracking-wider">
                                                Level
                                            </th>
                                            <th class="px-6 border-b border-gray-200 bg-gray-50"></th>
                                        </tr>
                                    </thead>
                                    <tbody>
                                        @for (int ix3 = 0; ix3 < nodes.Keys.Count; ix3++)
                                        {
                                            int nodeId = nodes.Keys.ElementAt(ix3);
                                            var levelCourses = course.LevelCourses.Where(join => join.NodeId == nodeId && join.Level.LevelCategory.Name == "Level of Capability").ToList();
                                            if (levelCourses.Count > 0)
                                            {
                                                string level = string.Join("-", levelCourses.Select(join => join.Level.Position));
                                                <tr class="bg-white@(ix3 != nodes.Keys.Count - 1 ? " border-b border-gray-200" : "")">
                                                    <td class="py-3 text-center">@nodes[nodeId]</td>
                                                    <td class="text-center ea-level-@level">@level</td>
                                                    <td class="px-6 text-sm text-center">
                                                        @if ((bool)ViewData["IsStatic"])
                                                        {
                                                            <a class="underline font-medium text-indigo-600 hover:text-indigo-900" href="node-@(nodeId).aspx">
                                                                View
                                                            </a>
                                                        }
                                                        else
                                                        {
                                                            <a class="underline font-medium text-indigo-600 hover:text-indigo-900"
                                                               asp-controller="UoNode" asp-action="GetView" asp-route-id="@nodeId" asp-route-projectId="@ViewData["ProjectId"]" asp-route-template="@ViewData["Template"]">
                                                                View
                                                            </a>
                                                        }
                                                    </td>
                                                </tr>
                                            }
                                        }
                                    </tbody>
                                </table>
                            </div>
                        </div>
                    </div>
                }
            </div>
        }
    </div>
}
