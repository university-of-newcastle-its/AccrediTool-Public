@model UoNodeModel
@{
    var framework = (UoFrameworkModel)ViewData["Framework"];
    ViewData["ViewName"] = (framework != null ? framework.CustomNodeNoun : "Node");
    ViewData["Title"] = (Model.NodeCode != null ? Model.NodeCode + " - " + Model.Name : Model.Name);
}

<style>
    .subnodes[open] > summary {
        /* text-indigo-900 */
        color: #362f78;
        color: rgba(54, 47, 120, 1);
    }

    .subnodes[open] > summary > span {
        display: none;
    }

    .subnodes[open] > summary::after {
        content: "Hide @(framework != null ? @framework.CustomNodePluralNoun.ToLower() : "sub-nodes")";
    }
</style>

<section class="py-4">
    <div class="bg-white overflow-hidden shadow sm:rounded-lg">
        <div class="px-4 py-5 border-b border-gray-200 sm:px-6">
            <h2 class="flex items-center text-lg leading-6 font-medium text-gray-900">
                @if (Model.NodeCode != null)
                {
                    <span class="inline-flex items-center px-2.5 h-8 mr-2 rounded-md font-semibold leading-5 tracking-wider bg-gray-100">@Model.NodeCode</span>
                }
                <span>@Model.Name</span>
            </h2>
            @if (Model.Description != null)
            {
                <p class="mt-1 text-sm leading-5 text-gray-500">
                    @Model.Description
                </p>
            }
        </div>
        <div class="px-4 py-5 sm:px-6">
            <span class="mb-4 inline-flex rounded-md shadow-sm">
                @if (Model.FrameworkId != null)
                {
                    if ((bool)ViewData["IsStatic"])
                    {
                        <a class="inline-flex items-center px-3 py-2 border border-transparent text-sm leading-4 font-medium rounded-md text-white bg-indigo-600 hover:bg-indigo-500 focus:outline-none focus:border-indigo-700 focus:shadow-outline-indigo active:bg-indigo-700 transition ease-in-out duration-150"
                           href="framework-@(Model.FrameworkId).aspx">
                            View @(framework != null ? @framework.CustomFrameworkNoun.ToLower() : "framework")
                        </a>
                    }
                    else
                    {
                        <a class="inline-flex items-center px-3 py-2 border border-transparent text-sm leading-4 font-medium rounded-md text-white bg-indigo-600 hover:bg-indigo-500 focus:outline-none focus:border-indigo-700 focus:shadow-outline-indigo active:bg-indigo-700 transition ease-in-out duration-150"
                           asp-controller="UoFramework" asp-action="GetView" asp-route-id="@Model.FrameworkId" asp-route-projectId="@ViewData["ProjectId"]" asp-route-template="@ViewData["Template"]">
                            View @(framework != null ? @framework.CustomFrameworkNoun.ToLower() : "framework")
                        </a>
                    }
                }
                else if (framework != null)
                {
                    if ((bool)ViewData["IsStatic"])
                    {
                        <a class="inline-flex items-center px-3 py-2 border border-gray-300 text-sm leading-4 font-medium rounded-md text-gray-700 bg-white hover:text-gray-500 focus:outline-none focus:border-blue-300 focus:shadow-outline-blue active:text-gray-800 active:bg-gray-50 transition ease-in-out duration-150"
                           href="framework-@(framework.FrameworkId).aspx">
                            View @framework.CustomFrameworkNoun.ToLower()
                        </a>
                    }
                    else
                    {
                        <a class="inline-flex items-center px-3 py-2 border border-gray-300 text-sm leading-4 font-medium rounded-md text-gray-700 bg-white hover:text-gray-500 focus:outline-none focus:border-blue-300 focus:shadow-outline-blue active:text-gray-800 active:bg-gray-50 transition ease-in-out duration-150"
                           asp-controller="UoFramework" asp-action="GetView" asp-route-id="@framework.FrameworkId" asp-route-projectId="@ViewData["ProjectId"]" asp-route-template="@ViewData["Template"]">
                            View @framework.CustomFrameworkNoun.ToLower()
                        </a>
                    }
                }
            </span>
            @if (Model.ParentNode != null)
            {
                Model.ParentNode.ChildNodes.Clear();
                <h2 class="text-lg leading-6 font-medium text-gray-900">Part of</h2>
                <partial name="_Nodes" model="new List<UoNodeModel>() { Model.ParentNode }" />
            }
            @if (Model.ChildNodes.Count > 0)
            {
                <div class="@(Model.ParentNode != null ? "mt-6" : "")">
                    <h2 class="text-lg leading-6 font-medium text-gray-900">Contains</h2>
                    <partial name="_Nodes" model="Model.ChildNodes" />
                </div>
            }
        </div>
    </div>
</section>
@if (Model.LevelCategories.Count > 0 && Model.IsMapped())
{
    <section class="py-4">
        <div class="bg-white overflow-hidden shadow sm:rounded-lg">
            <div class="px-4 py-5 border-b border-gray-200 sm:px-6">
                <h2 class="flex text-lg leading-6 font-medium text-gray-900">
                    @((string)ViewData["Template"] == "Universal" ? "Levels" : "Legend")
                </h2>
            </div>
            <div class="px-4 py-5 sm:px-6">
                @try
                {
                    <partial name="Templates/@ViewData["Template"]/_LevelCategories" model="Model.LevelCategories" />
                }
                catch (InvalidOperationException)
                {
                    <partial name="Templates/Universal/_LevelCategories" model="Model.LevelCategories" />
                }
            </div>
        </div>
    </section>
}
@if (Model.NodePrograms.Count > 0 || Model.LevelPrograms.Count > 0)
{
    <section class="py-4">
        <div class="bg-white overflow-hidden shadow sm:rounded-lg">
            <div class="px-4 py-5 border-b border-gray-200 sm:px-6">
                <h2 class="flex text-lg leading-6 font-medium text-gray-900">
                    Mapped Programs
                </h2>
            </div>
            <div class="px-4 py-5 sm:px-6">
                @if (Model.NodePrograms.Count > 0)
                {
                    try
                    {
                        <partial name="Templates/@ViewData["Template"]/_NodePrograms" model="Model.NodePrograms" />
                    }
                    catch (InvalidOperationException)
                    {
                        <partial name="Templates/Universal/_NodePrograms" model="Model.NodePrograms" />
                    }
                }
                @if (Model.LevelPrograms.Count > 0)
                {
                    <div class="@(Model.NodePrograms.Count > 0 ? "mt-4" : "")">
                        @try
                        {
                            <partial name="Templates/@ViewData["Template"]/_LevelPrograms" model="Model.LevelPrograms" />
                        }
                        catch (InvalidOperationException)
                        {
                            <partial name="Templates/Universal/_LevelPrograms" model="Model.LevelPrograms" />
                        }
                    </div>
                }
            </div>
        </div>
    </section>
}
@if (Model.NodeCourses.Count > 0 || Model.LevelCourses.Count > 0)
{
    <section class="py-4">
        <div class="bg-white overflow-hidden shadow sm:rounded-lg">
            <div class="px-4 py-5 border-b border-gray-200 sm:px-6">
                <h2 class="flex text-lg leading-6 font-medium text-gray-900">
                    Mapped Courses
                </h2>
            </div>
            <div class="px-4 py-5 sm:px-6">
                @if (Model.NodeCourses.Count > 0)
                {
                    try
                    {
                        <partial name="Templates/@ViewData["Template"]/_NodeCourses" model="Model.NodeCourses" />
                    }
                    catch (InvalidOperationException)
                    {
                        <partial name="Templates/Universal/_NodeCourses" model="Model.NodeCourses" />
                    }
                }
                @if (Model.LevelCourses.Count > 0)
                {
                    <div class="@(Model.NodeCourses.Count > 0 ? "mt-4" : "")">
                        @try
                        {
                            <partial name="Templates/@ViewData["Template"]/_LevelCourses" model="Model.LevelCourses" />
                        }
                        catch (InvalidOperationException)
                        {
                            <partial name="Templates/Universal/_LevelCourses" model="Model.LevelCourses" />
                        }
                    </div>
                }
            </div>
        </div>
    </section>
}
@if (Model.NodeAssessments.Count > 0 || Model.LevelAssessments.Count > 0)
{
    <section class="py-4">
        <div class="bg-white overflow-hidden shadow sm:rounded-lg">
            <div class="px-4 py-5 border-b border-gray-200 sm:px-6">
                <h2 class="flex text-lg leading-6 font-medium text-gray-900">
                    Mapped Assessments
                </h2>
            </div>
            <div class="px-4 py-5 sm:px-6">
                @if (Model.NodeAssessments.Count > 0)
                {
                    try
                    {
                        <partial name="Templates/@ViewData["Template"]/_NodeAssessments" model="Model.NodeAssessments" />
                    }
                    catch (InvalidOperationException)
                    {
                        <partial name="Templates/Universal/_NodeAssessments" model="Model.NodeAssessments" />
                    }
                }
                @if (Model.LevelAssessments.Count > 0)
                {
                    <div class="@(Model.NodeAssessments.Count > 0 ? "mt-4" : "")">
                        @try
                        {
                            <partial name="Templates/@ViewData["Template"]/_LevelAssessments" model="Model.LevelAssessments" />
                        }
                        catch (InvalidOperationException)
                        {
                            <partial name="Templates/Universal/_LevelAssessments" model="Model.LevelAssessments" />
                        }
                    </div>
                }
            </div>
        </div>
    </section>
}
